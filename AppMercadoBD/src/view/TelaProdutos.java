package view;

import persist.*;
import entity.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import util.TipoProduto;

/**
 *
 * @author andre; arthur
 */
public class TelaProdutos extends javax.swing.JFrame {

    private ProdutoDAO prdao;
    private Pessoa usuario;
    private DefaultTableModel tableModel;

    /**
     * Creates new form TelaPrincipal
     */
    public TelaProdutos() {
        prdao = ProdutoDAO.getInstance();
        initComponents();
        configurarTabela();
        preencherComboBoxTipoProduto();
        atualizarTabelaCarrinho();
        codigoFTF.setEditable(false);
    }

    public TelaProdutos(String usuario_id) {
        usuario = (Pessoa) PessoaDAO.getInstance().read(usuario_id);
        prdao = ProdutoDAO.getInstance();
        initComponents();
        preencherComboBoxTipoProduto();
        configurarTabela();
        atualizarTabelaCarrinho();
        codigoFTF.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        formaPagamentoGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        pesquisarFTF = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        adicionarBtn = new javax.swing.JButton();
        modificarBtn = new javax.swing.JButton();
        removerBtn = new javax.swing.JButton();
        limparCamposBtn = new javax.swing.JButton();
        nomeLabel1 = new javax.swing.JLabel();
        cpfLabel = new javax.swing.JLabel();
        nomeLabel = new javax.swing.JLabel();
        marcaFTF = new javax.swing.JFormattedTextField();
        dataLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        valorFTF = new javax.swing.JFormattedTextField();
        confirmaEmailLabel = new javax.swing.JLabel();
        senhaLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descTA = new javax.swing.JTextArea();
        senhaLabel1 = new javax.swing.JLabel();
        codigoFTF = new javax.swing.JFormattedTextField();
        nomeFTF = new javax.swing.JFormattedTextField();
        quantidadeSpinner = new javax.swing.JSpinner();
        tipoCB = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        menu = new javax.swing.JMenuBar();
        perfilMenu = new javax.swing.JMenu();
        historicoComprasBtn = new javax.swing.JMenuItem();
        sairBtn = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Marca", "Nome", "Descrição", "Valor Unitário", "Quantidade", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
        }

        pesquisarFTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarFTFActionPerformed(evt);
            }
        });
        pesquisarFTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pesquisarFTFKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pesquisarFTFKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pesquisarFTFKeyTyped(evt);
            }
        });

        jLabel1.setText("Pesquisar na tabela");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados"));

        adicionarBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        adicionarBtn.setText("ADICIONAR");
        adicionarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarBtnActionPerformed(evt);
            }
        });

        modificarBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        modificarBtn.setText("MODIFICAR");
        modificarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarBtnActionPerformed(evt);
            }
        });

        removerBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        removerBtn.setText("REMOVER");
        removerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerBtnActionPerformed(evt);
            }
        });

        limparCamposBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        limparCamposBtn.setText("LIMPAR CAMPOS");
        limparCamposBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparCamposBtnActionPerformed(evt);
            }
        });

        nomeLabel1.setText("selecione um produto na tabela");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(adicionarBtn)
                    .addComponent(modificarBtn)
                    .addComponent(nomeLabel1)
                    .addComponent(removerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(limparCamposBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(adicionarBtn)
                .addGap(37, 37, 37)
                .addComponent(modificarBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(removerBtn)
                .addGap(35, 35, 35)
                .addComponent(limparCamposBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cpfLabel.setText("Código");

        nomeLabel.setText("Marca");

        dataLabel.setText("Nome");

        emailLabel.setText("Descrição");

        valorFTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorFTFActionPerformed(evt);
            }
        });

        confirmaEmailLabel.setText("Valor Unitário");

        senhaLabel.setText("Quantidade");

        descTA.setColumns(20);
        descTA.setRows(5);
        jScrollPane2.setViewportView(descTA);

        senhaLabel1.setText("Tipo");

        tipoCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        tipoCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoCBActionPerformed(evt);
            }
        });

        jLabel2.setText("R$");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomeLabel)
                    .addComponent(cpfLabel)
                    .addComponent(marcaFTF, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataLabel)
                    .addComponent(emailLabel)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(senhaLabel)
                    .addComponent(senhaLabel1)
                    .addComponent(codigoFTF, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomeFTF, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(valorFTF, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(confirmaEmailLabel)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(quantidadeSpinner, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tipoCB, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cpfLabel)
                        .addGap(12, 12, 12)
                        .addComponent(codigoFTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(marcaFTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dataLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nomeFTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emailLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(confirmaEmailLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(valorFTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(senhaLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantidadeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(senhaLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tipoCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 89, Short.MAX_VALUE)))
                .addContainerGap())
        );

        perfilMenu.setText("Opções");

        historicoComprasBtn.setText("Voltar");
        historicoComprasBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historicoComprasBtnActionPerformed(evt);
            }
        });
        perfilMenu.add(historicoComprasBtn);

        sairBtn.setText("Sair");
        sairBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairBtnActionPerformed(evt);
            }
        });
        perfilMenu.add(sairBtn);

        menu.add(perfilMenu);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(pesquisarFTF, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pesquisarFTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void sairBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairBtnActionPerformed
        new TelaLogin().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_sairBtnActionPerformed

    private void historicoComprasBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historicoComprasBtnActionPerformed
        new TelaLoja(usuario.getCpf()).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_historicoComprasBtnActionPerformed

    private void pesquisarFTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarFTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pesquisarFTFActionPerformed

    private void pesquisarFTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pesquisarFTFKeyPressed
        atualizarTabelaFiltrada();
    }//GEN-LAST:event_pesquisarFTFKeyPressed

    private void pesquisarFTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pesquisarFTFKeyReleased
        atualizarTabelaFiltrada();
    }//GEN-LAST:event_pesquisarFTFKeyReleased

    private void pesquisarFTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pesquisarFTFKeyTyped
        atualizarTabelaFiltrada();
    }//GEN-LAST:event_pesquisarFTFKeyTyped

    private void adicionarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarBtnActionPerformed
        boolean status = true;
        
        String marca = marcaFTF.getText();
        if (marca.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Marca não informada");
            marcaFTF.grabFocus();
            status = false;
            return;
        }
        
        String nome = nomeFTF.getText();
        if (nome.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nome não informado");
            nomeFTF.grabFocus();
            status = false;
            return;
        }
        String desc = descTA.getText();
        if(desc.isEmpty()){
            JOptionPane.showMessageDialog(this, "Descrição do produto não informada!");
            descTA.grabFocus();
            status = false;
            return;
        }
        String preco = valorFTF.getText();
        double valor = Double.parseDouble(preco);
        if (preco.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Preço não informado");
            valorFTF.grabFocus();
            status = false;
            return;
        }
        if(valor <= 0.0){
            JOptionPane.showMessageDialog(this, "Preço não pode ser zero ou menor");
            valorFTF.grabFocus();
            status = false;
            return;
        }
        int quantidade = (int) quantidadeSpinner.getValue();
        if(quantidade <= 0) quantidade = 1;
        String tipoString = (String) tipoCB.getSelectedItem();
        TipoProduto tipo = TipoProduto.fromString(tipoString);
        if(status){
            Produto produto = new Produto(marca, nome, desc, quantidade, valor, tipo);
            if(prdao.create(produto)){
                JOptionPane.showMessageDialog(this, "Cadastrado com sucesso");
                limparCampos();
                atualizarTabelaCarrinho();
            }
        }
        
        
    }//GEN-LAST:event_adicionarBtnActionPerformed

    private void modificarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarBtnActionPerformed

    }//GEN-LAST:event_modificarBtnActionPerformed

    private void removerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerBtnActionPerformed
    }//GEN-LAST:event_removerBtnActionPerformed

    private void limparCamposBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparCamposBtnActionPerformed
        limparCampos();
    }//GEN-LAST:event_limparCamposBtnActionPerformed

    private void valorFTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorFTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorFTFActionPerformed

    private void tipoCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoCBActionPerformed

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked

    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow != -1) {

            String codigo = model.getValueAt(selectedRow, 0).toString();
            String marca = model.getValueAt(selectedRow, 1).toString();
            String nome = model.getValueAt(selectedRow, 2).toString();
            String desc = model.getValueAt(selectedRow, 3).toString();
            String valor = model.getValueAt(selectedRow, 4).toString();
            String quantidade = model.getValueAt(selectedRow, 5).toString();
            String tipo = model.getValueAt(selectedRow, 6).toString();

            // Define os valores nos campos de texto formatados
            codigoFTF.setValue(codigo);
            marcaFTF.setValue(marca);
            nomeFTF.setText(nome);
            descTA.setText(desc);
            valorFTF.setText(valor);
            int quantidadeInt = Integer.parseInt(quantidade);
            quantidadeSpinner.setValue(quantidadeInt);
            tipoCB.setSelectedItem(TipoProduto.retornaString(tipo));
        }
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaProdutos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaProdutos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaProdutos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaProdutos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaProdutos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionarBtn;
    private javax.swing.JFormattedTextField codigoFTF;
    private javax.swing.JLabel confirmaEmailLabel;
    private javax.swing.JLabel cpfLabel;
    private javax.swing.JLabel dataLabel;
    private javax.swing.JTextArea descTA;
    private javax.swing.JLabel emailLabel;
    private javax.swing.ButtonGroup formaPagamentoGroup;
    private javax.swing.JMenuItem historicoComprasBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton limparCamposBtn;
    private javax.swing.JFormattedTextField marcaFTF;
    private javax.swing.JMenuBar menu;
    private javax.swing.JButton modificarBtn;
    private javax.swing.JFormattedTextField nomeFTF;
    private javax.swing.JLabel nomeLabel;
    private javax.swing.JLabel nomeLabel1;
    private javax.swing.JMenu perfilMenu;
    private javax.swing.JFormattedTextField pesquisarFTF;
    private javax.swing.JSpinner quantidadeSpinner;
    private javax.swing.JButton removerBtn;
    private javax.swing.JMenuItem sairBtn;
    private javax.swing.JLabel senhaLabel;
    private javax.swing.JLabel senhaLabel1;
    private javax.swing.JComboBox<String> tipoCB;
    private javax.swing.JFormattedTextField valorFTF;
    // End of variables declaration//GEN-END:variables

    private void limparCampos() {
        codigoFTF.setText("");
        marcaFTF.setText("");
        nomeFTF.setText("");
        descTA.setText("");
        valorFTF.setText("");
        quantidadeSpinner.setValue(0);
    }

    private void preencherComboBoxTipoProduto() {
        tipoCB.removeAllItems();
        for (TipoProduto produto : TipoProduto.values()) {
            tipoCB.addItem(produto.getTipoProduto());
        }
    }

    private void atualizarTabelaCarrinho() {
        tableModel.setRowCount(0);

        for (Produto produto : prdao.listarTudo()) {
            Object[] rowData = {
                produto.getId(), produto.getMarca(), produto.getNome(), produto.getDescricao(), produto.getPreco(), produto.getQuantidade(), produto.getTipo().getTipoProduto()
            };
            tableModel.addRow(rowData);
        }
    }

    private void configurarTabela() {
        // Configura o DefaultTableModel para a jTable1
        tableModel = new DefaultTableModel(
                new Object[][]{}, // Dados iniciais (vazio)
                new String[]{"Código", "Marca", "Nome", "Descrição", "Valor Unitário", "Quantidade", "Tipo"} // Nomes das colunas
        );

        jTable1.setModel(tableModel);
    }

    private void atualizarTabelaFiltrada() {
        // Obtém o texto do campo de pesquisa
        String textoPesquisa = pesquisarFTF.getText().toLowerCase();

        // Cria um TableRowSorter baseado no modelo da tabela
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(tableModel);

        // Define o filtro para incluir linhas que contenham o texto da pesquisa
        sorter.setRowFilter(RowFilter.regexFilter(textoPesquisa));

        // Aplica o sorter à JTable
        jTable1.setRowSorter(sorter);
    }

}
