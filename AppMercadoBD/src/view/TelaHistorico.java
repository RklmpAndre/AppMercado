package view;

import Controller.Controller;
import entity.Carrinho;
import entity.Historico;
import entity.Pessoa;
import javax.swing.table.DefaultTableModel;
import persist.CarrinhoDAO;
import persist.HistoricoDAO;

/**
 *
 * @author andre; arthur
 */
public class TelaHistorico extends javax.swing.JFrame {
    
    private Historico historico;
    private HistoricoDAO hdao;
    private CarrinhoDAO cdao;
    private Pessoa usuario;
    private Controller cntrl;
    private DefaultTableModel tableModel;

    /**
     * Creates new form TelaPrincipal
     */
    public TelaHistorico() {
        historico = new Historico();
        hdao = HistoricoDAO.getInstance();
        cdao = CarrinhoDAO.getInstance();
        cntrl = new Controller();
        initComponents();
        configurarTabela();
        atualizarTabelaHistorico();
    }

    public TelaHistorico(Pessoa usuario) {
        historico = new Historico();
        hdao = HistoricoDAO.getInstance();
        cdao = CarrinhoDAO.getInstance();
        this.usuario = usuario;
        cntrl = new Controller();
        initComponents();
        configurarTabela();
        atualizarTabelaHistorico();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        opcoesMenu = new javax.swing.JMenu();
        voltarItem = new javax.swing.JMenuItem();
        sairItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Data da compra", "Pedido de entrega", "Forma de pagamento", "Total da compra", "Produtos", "Endereco de entrega", "Data de entrega"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
        }

        opcoesMenu.setText("Opções");

        voltarItem.setText("Voltar");
        voltarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarItemActionPerformed(evt);
            }
        });
        opcoesMenu.add(voltarItem);

        sairItem.setText("Sair");
        sairItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairItemActionPerformed(evt);
            }
        });
        opcoesMenu.add(sairItem);

        jMenuBar1.add(opcoesMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1069, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void voltarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarItemActionPerformed
        new TelaLoja(usuario.getCpf()).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_voltarItemActionPerformed

    private void sairItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairItemActionPerformed
        new TelaLogin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_sairItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaHistorico.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaHistorico.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaHistorico.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaHistorico.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaHistorico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenu opcoesMenu;
    private javax.swing.JMenuItem sairItem;
    private javax.swing.JMenuItem voltarItem;
    // End of variables declaration//GEN-END:variables

    private void atualizarTabelaHistorico() {
        tableModel.setRowCount(0);

        for (Carrinho c : cdao.listarCarrinhos(usuario)) {
            historico = (Historico) hdao.read(c.getId());
            Object[] rowData = {
                c.getDataCompraString(), historico.entregaString(), historico.getTipoPagamento().toString(), historico.getTotal_compra(), cntrl.listarItensCarrinho(c), historico.getEndereco(), historico.getDataString()
            };
            tableModel.addRow(rowData);
        }
    }

    private void configurarTabela() {
        // Configura o DefaultTableModel para a jTable1
        tableModel = new DefaultTableModel(
                new Object[][]{}, // Dados iniciais (vazio)
                new String[]{"Data da compra", "Pedido de entrega", "Forma de pagamento", "Total da compra", "Produtos", "Endereco de entrega", "Data de entrega"} // Nomes das colunas
        );

        jTable1.setModel(tableModel);
    }

}
